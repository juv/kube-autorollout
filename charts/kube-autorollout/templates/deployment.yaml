apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kube-autorollout.fullname" . }}
  labels:
    {{- include "kube-autorollout.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kube-autorollout.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kube-autorollout.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kube-autorollout.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CONFIG_FILE
              {{- $configDirectory := "/opt/app/kube-autorollout/config" }}
              value: {{ $configDirectory }}/config.yaml
          {{- range $registry := .Values.config.registries }}
          {{- if and $registry.secret (eq $registry.secret.type "Opaque") }}
            - name: {{ $registry.secret.key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $registry.secret.name }}
                  key: {{ $registry.secret.key }}
          {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.config.webserver.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: &configVolume config-volume
              mountPath: {{ $configDirectory }}
            {{- range $i, $registry := .Values.config.registries }}
            {{- if and $registry.secret (eq $registry.secret.type "ImagePullSecret") }}
            - name: kube-autorollout-pull-secret-{{ $i }}
              mountPath: {{ $registry.secret.mountPath }}
              readOnly: true
            {{- end }}
            {{- end }}
      volumes:
        - name: *configVolume
          configMap:
            name: {{ include "kube-autorollout.fullname" . }}-config
        {{- range $i, $registry := .Values.config.registries }}
        {{- if and $registry.secret (eq $registry.secret.type "ImagePullSecret") }}
        - name: kube-autorollout-pull-secret-{{ $i }}
          secret:
            secretName: {{ $registry.secret.name }}
        {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
